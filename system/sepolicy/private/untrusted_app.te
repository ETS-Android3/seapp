###
### Untrusted apps.
###
### This file defines the rules for untrusted apps.
### Apps are labeled based on mac_permissions.xml (maps signer and
### optionally package name to seinfo value) and seapp_contexts (maps UID
### and optionally seinfo value to domain for process and type for data
### directory).  The untrusted_app domain is the default assignment in
### seapp_contexts for any app with UID between APP_AID (10000)
### and AID_ISOLATED_START (99000) if the app has no specific seinfo
### value as determined from mac_permissions.xml.  In current AOSP, this
### domain is assigned to all non-system apps as well as to any system apps
### that are not signed by the platform key.  To move
### a system app into a specific domain, add a signer entry for it to
### mac_permissions.xml and assign it one of the pre-existing seinfo values
### or define and use a new seinfo value in both mac_permissions.xml and
### seapp_contexts.
###

typeattribute untrusted_app coredomain;
typeattribute untrusted_app sepolicy_app;

app_domain(untrusted_app)
untrusted_app_domain(untrusted_app)
net_domain(untrusted_app)
bluetooth_domain(untrusted_app)

# allow untrusted apps to use UDP sockets provided by the system server but not
# modify them other than to connect
allow untrusted_app system_server:udp_socket { connect getattr read recvfrom sendto write };

# Allow the allocation and use of ptys
# Used by: https://play.google.com/store/apps/details?id=jackpal.androidterm
create_pty(untrusted_app)

# Allow to read file_contexts_file to load full file_contexts (code could be changed to avoid this)
allow untrusted_app file_contexts_file:file r_file_perms;

# Allow to read /data/selinux/*/file_contexts
allow untrusted_app selinux_data_file:dir r_dir_perms;
allow untrusted_app selinux_data_file:file r_file_perms;

# Allow to relabelfrom ... and relabelto ...
allow untrusted_app app_data_file:file { relabelfrom relabelto };

# Allow to change file/process context (MUST BE HEAVILY LIMITED)
allow untrusted_app selinuxfs:file { open read write };
allow untrusted_app kernel:security { check_context };

# Switch SELinux context to newly defined domains (MUST BE HEAVILY LIMITED)
allow untrusted_app self:process { setcurrent };
allow untrusted_app sepolicy_app:process { dyntransition };
allow untrusted_app sepolicy_app:binder { impersonate };

neverallow untrusted_app system_server:udp_socket {
        accept append bind create getopt ioctl listen lock name_bind
        relabelfrom relabelto setattr setopt shutdown };
